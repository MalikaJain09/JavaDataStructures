Arrays Sum

Given an array/list(ARR) of length N, you need to find and return the sum of all the elements in the array/list.
Input Format :
Line 1 : An Integer N i.e. the size of the array/list
Line 2 : N integers which are elements of the array/list, separated by a single space.
Output Format :
Sum of the numbers in the array/list
Constraints :
0 <= N <= 10^7

Sample Input 1:
3
9 8 9
Sample Output 1:
26

Sample Input 2:
4
2 3 5 1
Sample Output 2:
11

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Runner {

    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    public static int[] takeInput() throws IOException {
        int size = Integer.parseInt(br.readLine().trim());
        int[] input = new int[size];

        if (size == 0) {
            return input;
        }
        
        String[] strNums; 
        strNums = br.readLine().trim().split("\\s");
        

        for (int i = 0; i < size; ++i) {
            input[i] = Integer.parseInt(strNums[i]);
        }

        return input;
    }


    public static void main(String[] args) throws NumberFormatException, IOException {
        int t = Integer.parseInt(br.readLine().trim());

        while(t > 0) {
            int[] input = takeInput();
            System.out.println(Solution.sum(input));
            t -= 1;
        }
    }

public class Solution {

	public static int sum(int[] input){
		/* Your class should be named Solution
	 	* Don't write main().
	 	* Don't read input, it is passed as function argument.
	 	* Return output and don't print it.
		* Taking input and printing output is handled automatically.
		*/
        int i;
        int sumOfArray = 0;
        for (i = 0 ; i<input.length ; i++){
                sumOfArray +=input[i] ;
            }
        return sumOfArray;
         
		
	}
	
}
}
